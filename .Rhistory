bptest(model_backward)
library(lmtest)
bptest(model_all)
plot(model_all$residuals)
plot(y = model_all$residuals, x=model_all$fitted.values)
library(lmtest)
bptest(model_all)
library(car)
vif(model_all)
sum((predict(model_all) - mean(emission_feature$CO2.Emissions.g.km.))**2)/
sum((emission_feature$CO2.Emissions.g.km. - mean(emission_feature$CO2.Emissions.g.km.))**2)
var(predict(model_all))
var(emission_feature$CO2.Emissions.g.km.)
var(predict(model_all))/
var(emission_feature$CO2.Emissions.g.km.)
library(MLmetrics)
MSE(y_pred = co2_pred$model_city,
y_true = co2_pred$actual)
MSE(y_pred = co2_pred$model_all,
y_true = co2_pred$actual)
MSE(y_pred = co2_pred$model_co2_corr,
y_true = co2_pred$actual)
library(rmarkdown)
emission <-  read.csv('data/CO2 Emissions_Canada.csv')
paged_table(head(emission))
summary(emission)
library(rmarkdown)
library(dplyr)
emission <-  read.csv('data/CO2 Emissions_Canada.csv')
paged_table(head(emission))
emission <- emission %>%
select(-c("Fuel.Consumption.Comb..L.100.km.", "Fuel.Consumption.Comb..mpg."))
sum(duplicated(emission))
emission_clean <- emission[!duplicated(emission, fromLast = TRUE),]
paged_table(emission_clean)
colSums(is.na(emission_clean))
head(emission_clean)
# Split the string based on the last character
emission_clean <- emission_clean %>%
mutate(
Transmission.Type = gsub("[0-9]", "", Transmission), # Remove all numbers
Gear = ifelse(grepl("\\d", Transmission), gsub("[^0-9]", "", Transmission), 0) # Get only number if they exist, else 0
)
glimpse(emission_clean)
emission_clean <- emission_clean %>%
mutate_if(.predicate = is.character, .funs = as.factor)
glimpse(emission_clean)
summary(emission_clean$CO2.Emissions.g.km.)
hist(emission_clean$CO2.Emissions.g.km.)
hist(emission_clean$Fuel.Consumption.City..L.100.km.)
summary(emission_clean$Fuel.Consumption.City..L.100.km.)
hist(emission_clean$Fuel.Consumption.Hwy..L.100.km.)
summary(emission_clean$Fuel.Consumption.Hwy..L.100.km.)
table(emission$Make)
sort(table(emission$Make), decreasing = TRUE)
plot(emission_clean$Transmission.Type)
library(ggplot2)
ggplot(data= emission_clean, mapping = aes(x = Fuel.Consumption.City..L.100.km., y = CO2.Emissions.g.km.)) +
geom_point(color = "blue") +
theme_light()
ggplot(data = emission_clean)+
geom_point(aes(x = Fuel.Consumption.City..L.100.km., y = CO2.Emissions.g.km.), color = "steelblue") +
geom_point(aes(x = Fuel.Consumption.Hwy..L.100.km., y = CO2.Emissions.g.km.), color = "tomato") +
labs(
x = "Fuel.Consumption",
y = "CO2 Emission",
title = "Distribution of Emission based on Fuel Consumption",
subtitle = "Red for Highway, Blue for City"
)
# Agregasi data
mean_emission_fuel <- aggregate(CO2.Emissions.g.km. ~ Fuel.Type, emission_clean, mean)
# Rename kolom
names(mean_emission_fuel) <- c("Fuel.Type", "mean_emission")
#Urutkan data
mean_emission_fuel <- mean_emission_fuel[order(mean_emission_fuel$mean_emission, decreasing = T),]
mean_emission_fuel
# Create the bar plot
ggplot(mean_emission_fuel, aes(x = mean_emission, y = reorder(Fuel.Type, mean_emission))) +
geom_col(fill = "steelblue") +
geom_label(data = mean_emission_fuel,
aes(label = round(mean_emission, 2)))+
labs(
y = "Fuel Type",
x = "Mean CO2 Emission",
title = "Average emission of each Fuel Type"
)
# Agregasi data
mean_emission_transmission <- aggregate(CO2.Emissions.g.km. ~ Transmission.Type, emission_clean, mean)
# Order the data
mean_emission_transmission <- mean_emission_transmission[order(mean_emission_transmission$CO2.Emissions.g.km., decreasing = T),]
names(mean_emission_transmission) <- c("Transmission.Type", "mean_emission")
mean_emission_transmission
ggplot(data = mean_emission_transmission, aes(x = mean_emission, y = reorder(Transmission.Type , mean_emission))) +
geom_col(fill = "steelblue")+
geom_label(aes(label = round(mean_emission,2)))+
labs(
x = "Average emission",
y = "Transmission type",
title = "Average emission for each transmission type"
)
emission_clean[emission_clean$Transmission.Type == "AV",]
mean_emission_comp <- aggregate(CO2.Emissions.g.km ~ Make, emission_clean, mean)
mean_emission_comp <- aggregate(CO2.Emissions.g.km. ~ Make, emission_clean, mean)
mean_emission_comp
mean_emission_comp <- aggregate(CO2.Emissions.g.km. ~ Make, emission_clean, mean)
# Order the data
mean_emission_comp <- mean_emission_comp[order(mean_emission_comp$CO2.Emissions.g.km., decreasing = T),]
names(mean_emission_comp) <- c("Company", "mean_emission")
mean_emission_comp
ggplot(data = mean_emission_comp, aes(x = mean_emission, y = reorder(Company , mean_emission))) +
geom_col(fill = "steelblue")+
geom_label(aes(label = round(mean_emission,2)))+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp, aes(x = mean_emission, y = reorder(Company , mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp, aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp, aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data= emission_clean, mapping = aes(x = Fuel.Consumption.City..L.100.km., y = CO2.Emissions.g.km.)) +
geom_point(color = "blue") +
theme_light()
ggplot(data = mean_emission_comp[1:3], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp[1:3,], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp, aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp[-1:-3,], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp[-1:-3,], aes(x = mean_emission, y = reorder(Company , mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp[-1:-3,], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp[-3;-1,], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
ggplot(data = mean_emission_comp[-3:-1,], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
mean_emission_comp <- aggregate(CO2.Emissions.g.km. ~ Make, emission_clean, mean)
# Order the data
mean_emission_comp <- mean_emission_comp[order(mean_emission_comp$CO2.Emissions.g.km., decreasing = F),]
names(mean_emission_comp) <- c("Company", "mean_emission")
mean_emission_comp
ggplot(data = mean_emission_comp, aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp[1:3], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp[1:3,], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp[1:10,], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "Average emission for each transmission type"
)
ggplot(data = mean_emission_comp[1:10,], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "10 Company produce the lowest emission car"
)
ggplot(data = mean_emission_comp[1:10,], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = "Company",
title = "10 Company produce the lowest emission car"
)
mean(emission_clean$CO2.Emissions.g.km.)
ggplot(data = mean_emission_comp[1:10,], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
title = "10 Company produce the lowest emission car"
)
ggplot(data = mean_emission_comp[1:10,], aes(x = mean_emission, y = reorder(Company , -mean_emission))) +
geom_col(fill = "steelblue")+
labs(
x = "Average emission",
y = NULL,
title = "10 Company produce the lowest emission car"
)
plot(emission_clean$Gear)
plot(emission_clean$Make)
emission_clean[order(emission_clean$CO2.Emissions.g.km., decreasing = F),]
ggplot(data= emission_clean, mapping = aes(x = Fuel.Consumption.City..L.100.km., y = CO2.Emissions.g.km.)) +
geom_point(aes(color = Fuel.Type))
ggplot(data= emission_clean, mapping = aes(x = Fuel.Consumption.Hwy..L.100.km., y = CO2.Emissions.g.km.)) +
geom_point(aes(color = Fuel.Type))
ggplot(data= emission_clean, mapping = aes(x = Fuel.Consumption.City..L.100.km., y = CO2.Emissions.g.km.)) +
geom_point(aes(color = Fuel.Type))
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
# scientific notation
options(scipen = 9999)
reticulate::repl_python()
import pandas as pd
```{r, warning = FALSE}
# Agregasi data
sum_emission_fuel <- aggregate(CO2.Emissions.g.km. ~ Fuel.Type, emission_clean, sum)
library(rmarkdown)
library(dplyr)
emission <-  read.csv('data/CO2 Emissions_Canada.csv')
paged_table(head(emission))
emission <- emission %>%
select(-c("Fuel.Consumption.Comb..L.100.km.", "Fuel.Consumption.Comb..mpg."))
sum(duplicated(emission))
emission_clean <- emission[!duplicated(emission, fromLast = TRUE),]
paged_table(emission_clean)
colSums(is.na(emission_clean))
head(emission_clean)
# Split the string based on the last character
emission_clean <- emission_clean %>%
mutate(
Transmission.Type = gsub("[0-9]", "", Transmission), # Remove all numbers
Gear = ifelse(grepl("\\d", Transmission), gsub("[^0-9]", "", Transmission), 0) # Get only number if they exist, else 0
)
glimpse(emission_clean)
emission_clean <- emission_clean %>%
mutate_if(.predicate = is.character, .funs = as.factor)
glimpse(emission_clean)
summary(emission_clean$CO2.Emissions.g.km.)
hist(emission_clean$CO2.Emissions.g.km.)
hist(emission_clean$Fuel.Consumption.City..L.100.km.)
summary(emission_clean$Fuel.Consumption.City..L.100.km.)
hist(emission_clean$Fuel.Consumption.Hwy..L.100.km.)
summary(emission_clean$Fuel.Consumption.Hwy..L.100.km.)
table(emission$Make)
sort(table(emission$Make), decreasing = TRUE)
plot(emission_clean$Transmission.Type)
library(ggplot2)
ggplot(data= emission_clean, mapping = aes(x = Fuel.Consumption.City..L.100.km., y = CO2.Emissions.g.km.)) +
geom_point(color = "blue") +
theme_light()
ggplot(data = emission_clean)+
geom_point(aes(x = Fuel.Consumption.City..L.100.km., y = CO2.Emissions.g.km.), color = "steelblue") +
geom_point(aes(x = Fuel.Consumption.Hwy..L.100.km., y = CO2.Emissions.g.km.), color = "tomato") +
labs(
x = "Fuel.Consumption",
y = "CO2 Emission",
title = "Distribution of Emission based on Fuel Consumption",
subtitle = "Red for Highway, Blue for City"
)
# Agregasi data
mean_emission_fuel <- aggregate(CO2.Emissions.g.km. ~ Fuel.Type, emission_clean, mean)
# Rename kolom
names(mean_emission_fuel) <- c("Fuel.Type", "mean_emission")
#Urutkan data
mean_emission_fuel <- mean_emission_fuel[order(mean_emission_fuel$mean_emission, decreasing = T),]
mean_emission_fuel
# Create the bar plot
ggplot(mean_emission_fuel, aes(x = mean_emission, y = reorder(Fuel.Type, mean_emission))) +
geom_col(fill = "steelblue") +
geom_label(data = mean_emission_fuel,
aes(label = round(mean_emission, 2)))+
labs(
y = "Fuel Type",
x = "Mean CO2 Emission",
title = "Average emission of each Fuel Type"
)
ggplot(data= emission_clean, mapping = aes(x = Fuel.Consumption.City..L.100.km., y = CO2.Emissions.g.km.)) +
geom_point(aes(color = Fuel.Type))
# Agregasi data
sum_emission_fuel <- aggregate(CO2.Emissions.g.km. ~ Fuel.Type, emission_clean, sum)
# Rename kolom
names(sum_emission_fuel) <- c("Fuel.Type", "mean_emission")
#Urutkan data
sum_emission_fuel <- sum_emission_fuel[order(sum_emission_fuel$mean_emission, decreasing = T),]
sum_emission_fuel
# Rename kolom
names(sum_emission_fuel) <- c("Fuel.Type", "Total Emission")
# Agregasi data
sum_emission_fuel <- aggregate(CO2.Emissions.g.km. ~ Fuel.Type, emission_clean, sum)
# Rename kolom
names(sum_emission_fuel) <- c("Fuel.Type", "Total Emission")
#Urutkan data
sum_emission_fuel <- sum_emission_fuel[order(sum_emission_fuel$mean_emission, decreasing = T),]
sum_emission_fuel
#Urutkan data
sum_emission_fuel <- sum_emission_fuel[order(sum_emission_fuel$mean_emission, decreasing = T),]
sum_emission_fuel
# Agregasi data
sum_emission_fuel <- aggregate(CO2.Emissions.g.km. ~ Fuel.Type, emission_clean, sum)
# Count the number of rows for each group
sum_emission_fuel$count <- tapply(emission_clean$CO2.Emissions.g.km., emission_clean$Fuel.Type, FUN = length)[sum_emission_fuel$Fuel.Type]
# Rename kolom
names(sum_emission_fuel) <- c("Fuel.Type", "Total Emission", "Vehicle count")
# Urutkan data
sum_emission_fuel <- sum_emission_fuel[order(sum_emission_fuel$`Total Emission`, decreasing = TRUE),]
# Print the result
sum_emission_fuel
ggplot(data= emission_clean, mapping = aes(x = Fuel.Consumption.City..L.100.km., y = CO2.Emissions.g.km.)) +
geom_point(aes(color = Transmission.Type))
ggplot(data= emission_clean, mapping = aes(x = Fuel.Consumption.City..L.100.km., y = CO2.Emissions.g.km.)) +
geom_point(aes(color = Gear))
# Count the number of rows for each group
mean_emission_transmission$count <- tapply(emission_clean$CO2.Emissions.g.km., emission_clean$Transmission.Type, FUN = length)[mean_emission_transmission$Transmission.Type]
# Order the data
mean_emission_transmission <- mean_emission_transmission[order(mean_emission_transmission$CO2.Emissions.g.km., decreasing = TRUE),]
# Aggregasi data
mean_emission_transmission <- aggregate(CO2.Emissions.g.km. ~ Transmission.Type, emission_clean, mean)
# Count the number of rows for each group
mean_emission_transmission$count <- tapply(emission_clean$CO2.Emissions.g.km., emission_clean$Transmission.Type, FUN = length)[mean_emission_transmission$Transmission.Type]
# Order the data
mean_emission_transmission <- mean_emission_transmission[order(mean_emission_transmission$CO2.Emissions.g.km., decreasing = TRUE),]
# Rename the columns
names(mean_emission_transmission) <- c("Transmission.Type", "Mean Emission", "Row Count")
mean_emission_transmission
ggplot(data= emission_clean, mapping = aes(x = Fuel.Consumption.City..L.100.km., y = CO2.Emissions.g.km.)) +
geom_point(aes(color = Gear))
hist(emission_clean$Gear)
type(emission_clean$Gear)
typeof(emission_clean$Gear)
hist(emission_clean$Gear)
barplot(emission_clean$Gear)
hist(emission_clean$Gear)
hist(as.numeric(emission_clean$Gear))
# Aggregasi data
mean_emission_gear <- aggregate(CO2.Emissions.g.km. ~ Gear, emission_clean, mean)
# Count the number of rows for each group
mean_emission_gear$count <- tapply(emission_clean$CO2.Emissions.g.km., emission_clean$Gear, FUN = length)[mean_emission_gear$Gear]
# Order the data
mean_emission_gear <- mean_emission_gear[order(mean_emission_gear$CO2.Emissions.g.km., decreasing = TRUE),]
# Rename the columns
names(mean_emission_gear) <- c("Transmission.Type", "Mean Emission", "Vehicle Count")
mean_emission_gear
# Aggregasi data
mean_emission_gear <- aggregate(CO2.Emissions.g.km. ~ Gear, emission_clean, mean)
# Count the number of rows for each group
mean_emission_gear$count <- tapply(emission_clean$CO2.Emissions.g.km., emission_clean$Gear, FUN = length)[mean_emission_gear$Gear]
# Order the data
mean_emission_gear <- mean_emission_gear[order(mean_emission_gear$CO2.Emissions.g.km., decreasing = TRUE),]
# Rename the columns
names(mean_emission_gear) <- c("Gear", "Mean Emission", "Vehicle Count")
mean_emission_gear
ggplot(data = mean_emission_gear, aes(x = mean_emission, y = reorder(Gear , mean_emission))) +
geom_col(fill = "steelblue")+
geom_label(aes(label = round(mean_emission,2)))+
labs(
x = "Average emission",
y = "TGear",
title = "Average emission for each number of gear"
)
ggplot(data = mean_emission_transmission, aes(x = mean_emission, y = reorder(Transmission.Type , mean_emission))) +
geom_col(fill = "steelblue")+
geom_label(aes(label = round(mean_emission,2)))+
labs(
x = "Average emission",
y = "Transmission type",
title = "Average emission for each transmission type"
)
# Aggregasi data
mean_emission_transmission <- aggregate(CO2.Emissions.g.km. ~ Transmission.Type, emission_clean, mean)
# Count the number of rows for each group
mean_emission_transmission$count <- tapply(emission_clean$CO2.Emissions.g.km., emission_clean$Transmission.Type, FUN = length)[mean_emission_transmission$Transmission.Type]
# Order the data
mean_emission_transmission <- mean_emission_transmission[order(mean_emission_transmission$CO2.Emissions.g.km., decreasing = TRUE),]
# Rename the columns
names(mean_emission_transmission) <- c("Transmission.Type", "mean_emission", "Vehicle count")
mean_emission_transmission
ggplot(data = mean_emission_transmission, aes(x = mean_emission, y = reorder(Transmission.Type , mean_emission))) +
geom_col(fill = "steelblue")+
geom_label(aes(label = round(mean_emission,2)))+
labs(
x = "Average emission",
y = "Transmission type",
title = "Average emission for each transmission type"
)
# Rename the columns
names(mean_emission_gear) <- c("Gear", "mean_emission", "Vehicle Count")
# Aggregasi data
mean_emission_gear <- aggregate(CO2.Emissions.g.km. ~ Gear, emission_clean, mean)
# Count the number of rows for each group
mean_emission_gear$count <- tapply(emission_clean$CO2.Emissions.g.km., emission_clean$Gear, FUN = length)[mean_emission_gear$Gear]
# Order the data
mean_emission_gear <- mean_emission_gear[order(mean_emission_gear$CO2.Emissions.g.km., decreasing = TRUE),]
# Rename the columns
names(mean_emission_gear) <- c("Gear", "mean_emission", "Vehicle Count")
mean_emission_gear
ggplot(data = mean_emission_gear, aes(x = mean_emission, y = reorder(Gear , mean_emission))) +
geom_col(fill = "steelblue")+
geom_label(aes(label = round(mean_emission,2)))+
labs(
x = "Average emission",
y = "TGear",
title = "Average emission for each number of gear"
)
ggplot(data = mean_emission_gear, aes(x = mean_emission, y = reorder(Gear , mean_emission))) +
geom_col(fill = "steelblue")+
geom_label(aes(label = round(mean_emission,2)))+
labs(
x = "Average emission",
y = "Number of Gear",
title = "Average emission for each number of gear"
)
# Aggregasi data
mean_consumption_gear <- aggregate(Fuel.Consumption.City..L.100.km. ~ Gear, emission_clean, mean)
# Count the number of rows for each group
mean_consumption_gear$count <- tapply(emission_clean$Fuel.Consumption.City..L.100.km., emission_clean$Gear, FUN = length)[mean_consumption_gear$Gear]
# Order the data
mean_consumption_gear <- mean_consumption_gear[order(mean_consumption_gear$Fuel.Consumption.City..L.100.km., decreasing = TRUE),]
# Rename the columns
names(mean_consumption_gear) <- c("Gear", "mean_consumption", "Vehicle Count")
mean_consumption_gear
ggplot(data= emission_clean, mapping = aes(y = Fuel.Consumption.City..L.100.km., x = Gear)) +
geom_point(aes(color = Gear))
ggplot(data= emission_clean, mapping = aes(y = Fuel.Consumption.City..L.100.km., x = Gear))
ggplot(data= emission_clean, mapping = aes(y = Fuel.Consumption.City..L.100.km., x = Gear) + geom_point())
ggplot(data= emission_clean, mapping = aes(y = Fuel.Consumption.City..L.100.km., x = Gear)) +
geom_point()
ggcorr(emission_clean)
library(GGally)
ggcorr(emission_clean)
ggplot(data= emission_clean, mapping = aes(y = Fuel.Consumption.City..L.100.km., x = Gear)) +
geom_point(aes(Gear))
ggplot(data= emission_clean, mapping = aes(y = Fuel.Consumption.City..L.100.km., x = Gear)) +
geom_point(aes(color = Gear))
x
ggplot(data= emission_clean, mapping = aes(x = Fuel.Consumption.City..L.100.km., y = CO2.Emissions.g.km.)) +
geom_point(aes(color = Gear))
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
# scientific notation
options(scipen = 9999)
library(rmarkdown)
emission <-  read.csv('data/CO2 Emissions_Canada.csv')
paged_table(head(emission))
str(emission)
boxplot(emission)
col(emission)
